#!/usr/bin/env python

import sys
import os
dir_name = os.path.dirname(os.path.abspath("__file__"))
base_dir = os.path.abspath(os.path.join(dir_name,"../.."))

sys.path.insert(0,base_dir)
from django.core.management import setup_environ
from app import settings
setup_environ(settings)

from django.db.models import Q
from app.main.models import *
from app.main.tools import *
from app.main.util import *
from app.urls import viewList

def printf(format,*args): sys.stdout.write(format%args)

for viewObj in viewList:
    view_class = viewObj.__class__.__name__
    for m in viewObj.methods:
        view_name = m[5]
        pattern = m[0]
        if view_name == None or pattern == None:
            continue
        try:
            vc = ViewClass.objects.get(name=view_class)
        except ViewClass.DoesNotExist:
            printf("Creating new viewClass %s\n",view_class)
            vc = ViewClass()
            vc.name = view_class
            vc.save()
        try:
            v = View.objects.get(view_class__name=view_class,name=view_name)
        except View.DoesNotExist:
            printf("Creating new view %s:%s\n",view_class,view_name)
            v = View()
            v.view_class = vc
            v.name = view_name
            v.save()

try:
    r = Role.objects.get(name="edituser")
except:
    r = Role()
    r.name = "edituser"
    r.desc = "Can create a User or Set a Users Passwd"
    printf("Adding role %s\n",r.name)
    r.save()

r = Role.objects.get(name="edituser")
q = Q(view_class__name="AccountView")&Q(name="edituser")
v = View.objects.get(q)

v.roles.add(r)
v.save()
